{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/SearchBox.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","monster","username","src","id","name","email","CardList","monsters","map","SearchBox","placeholder","handleChange","value","type","onChange","App","onInputChange","e","setState","searchField","target","state","fetch","then","res","json","users","this","filteredMonsters","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uUAEaA,EAAO,SAACC,GAAD,OAClB,sBAAKC,UAAU,iBAAf,UACE,qBACEC,IAAKF,EAAMG,QAAQC,SACnBC,IAAG,+BAA0BL,EAAMG,QAAQG,GAAxC,eAEL,6BAAKN,EAAMG,QAAQI,OACnB,4BAAIP,EAAMG,QAAQK,YCIPC,EAVE,SAACT,GAChB,OACE,qBAAKC,UAAU,YAAf,SACGD,EAAMU,SAASC,KAAI,SAACR,GACnB,OAAO,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQG,U,MCUnBM,MAbf,YAA0D,IAArCC,EAAoC,EAApCA,YAAaC,EAAuB,EAAvBA,aAAcC,EAAS,EAATA,MAC9C,OACE,qBAAKd,UAAU,YAAf,SACE,uBACEe,KAAK,SACLH,YAAaA,EACbE,MAAOA,EACPE,SAAUH,OCiCHI,E,kDAtCb,aAAe,IAAD,8BACZ,gBAaFC,cAAgB,SAACC,GACf,EAAKC,SAAS,CAAEC,YAAaF,EAAEG,OAAOR,SAbtC,EAAKS,MAAQ,CACXd,SAAU,GACVY,YAAa,IAJH,E,qDAQd,WAAqB,IAAD,OAClBG,MAAM,8CACHC,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GAAD,OAAW,EAAKR,SAAS,CAAEX,SAAUmB,S,oBAO/C,WAAU,IAAD,EAC2BC,KAAKN,MAA/Bd,EADD,EACCA,SAAUY,EADX,EACWA,YACZS,EAAmBrB,EAASsB,QAAO,SAAC7B,GAAD,OACvCA,EAAQI,KAAK0B,cAAcC,SAASZ,EAAYW,kBAGlD,OACE,sBAAKhC,UAAU,MAAf,UACE,6CACA,cAAC,EAAD,CACEY,YAAY,iBACZE,MAAOe,KAAKN,MAAMF,YAClBR,aAAcgB,KAAKX,gBAErB,cAAC,EAAD,CAAUT,SAAUqB,W,GAjCVI,aCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.4f3643c7.chunk.js","sourcesContent":["import \"./card.styles.css\";\r\n\r\nexport const Card = (props) => (\r\n  <div className=\"card-container\">\r\n    <img\r\n      alt={props.monster.username}\r\n      src={`https://robohash.org/${props.monster.id}?set=set2`}\r\n    />\r\n    <h3>{props.monster.name}</h3>\r\n    <p>{props.monster.email}</p>\r\n  </div>\r\n);\r\n","import \"./card-list.styles.css\";\r\nimport { Card } from \"../card/card.component\";\r\n\r\nconst CardList = (props) => {\r\n  return (\r\n    <div className=\"card-list\">\r\n      {props.monsters.map((monster) => {\r\n        return <Card key={monster.id} monster={monster} />;\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CardList;\r\n","import React from \"react\";\r\n\r\nimport \"./SearchBox.styles.css\";\r\n\r\nfunction SearchBox({ placeholder, handleChange, value }) {\r\n  return (\r\n    <div className=\"searchBox\">\r\n      <input\r\n        type=\"search\"\r\n        placeholder={placeholder}\r\n        value={value}\r\n        onChange={handleChange}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SearchBox;\r\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport CardList from \"./components/card-list/card-list.component\";\nimport SearchBox from \"./components/search-box/SearchBox.component\";\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      monsters: [],\n      searchField: \"\",\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\n      .then((res) => res.json())\n      .then((users) => this.setState({ monsters: users }));\n  }\n\n  onInputChange = (e) => {\n    this.setState({ searchField: e.target.value });\n  };\n\n  render() {\n    const { monsters, searchField } = this.state;\n    const filteredMonsters = monsters.filter((monster) =>\n      monster.name.toLowerCase().includes(searchField.toLowerCase())\n    );\n\n    return (\n      <div className=\"App\">\n        <h1>Monster App</h1>\n        <SearchBox\n          placeholder=\"Search here...\"\n          value={this.state.searchField}\n          handleChange={this.onInputChange}\n        />\n        <CardList monsters={filteredMonsters} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}